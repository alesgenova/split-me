/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  IResizeEvent,
} from './components/split-me/interfaces';

export namespace Components {
  interface SplitMe {
    /**
    * The direction of the splitter.
    */
    'd': 'horizontal' | 'vertical';
    /**
    * Prevent the splitter from being resized.
    */
    'fixed': boolean;
    /**
    * The maximum sizes of the slots. Same format as `sizes`
    */
    'maxSizes': string | number[];
    /**
    * The minimum sizes of the slots. Same format as `sizes`
    */
    'minSizes': string | number[];
    /**
    * The number of slots in the splitter.
    */
    'n': number;
    /**
    * The initial sizes of the slots. Acceptable formats are: `sizes="0.33, 0.67"` or `sizes="50%, 25%, 25%"`
    */
    'sizes': string | number[];
    /**
    * The minimum time (in ms) between resize events while dragging.
    */
    'throttle': number;
  }
}

declare global {


  interface HTMLSplitMeElement extends Components.SplitMe, HTMLStencilElement {}
  var HTMLSplitMeElement: {
    prototype: HTMLSplitMeElement;
    new (): HTMLSplitMeElement;
  };
  interface HTMLElementTagNameMap {
    'split-me': HTMLSplitMeElement;
  }
}

declare namespace LocalJSX {
  interface SplitMe extends JSXBase.HTMLAttributes<HTMLSplitMeElement> {
    /**
    * The direction of the splitter.
    */
    'd'?: 'horizontal' | 'vertical';
    /**
    * Prevent the splitter from being resized.
    */
    'fixed'?: boolean;
    /**
    * The maximum sizes of the slots. Same format as `sizes`
    */
    'maxSizes'?: string | number[];
    /**
    * The minimum sizes of the slots. Same format as `sizes`
    */
    'minSizes'?: string | number[];
    /**
    * The number of slots in the splitter.
    */
    'n'?: number;
    /**
    * Emitted every time dragging causes the slots to resize
    */
    'onSlotResized'?: (event: CustomEvent<IResizeEvent>) => void;
    /**
    * The initial sizes of the slots. Acceptable formats are: `sizes="0.33, 0.67"` or `sizes="50%, 25%, 25%"`
    */
    'sizes'?: string | number[];
    /**
    * The minimum time (in ms) between resize events while dragging.
    */
    'throttle'?: number;
  }

  interface IntrinsicElements {
    'split-me': SplitMe;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


