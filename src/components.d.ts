/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

import { EventEmitter } from '@stencil/core';
import { IResizeEvent } from './components/split-me/interfaces';

export namespace Components {
  interface SplitMe {
    d: 'horizontal' | 'vertical';
    fixed: boolean;
    maxSizes: string | number[];
    minSizes: string | number[];
    n: number;
    sizes: string | number[];
    throttle: number;
  }
  interface SplitMeAttributes extends StencilHTMLAttributes {
    d?: 'horizontal' | 'vertical';
    fixed?: boolean;
    maxSizes?: string | number[];
    minSizes?: string | number[];
    n?: number;
    onSlotResized?: (event: CustomEvent<IResizeEvent>) => void;
    sizes?: string | number[];
    throttle?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    SplitMe: Components.SplitMe;
  }

  interface StencilIntrinsicElements {
    'split-me': Components.SplitMeAttributes;
  }

  interface HTMLSplitMeElement extends Components.SplitMe, HTMLStencilElement {}
  var HTMLSplitMeElement: {
    prototype: HTMLSplitMeElement;
    new (): HTMLSplitMeElement;
  };

  interface HTMLElementTagNameMap {
    'split-me': HTMLSplitMeElement;
  }

  interface ElementTagNameMap {
    'split-me': HTMLSplitMeElement;
  }

  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}
}
