/**
* This is an autogenerated file created by the Stencil compiler.
* It contains typing information for all components that exist in this project.
*/
/* tslint:disable */

import '@stencil/core';




export namespace Components {

  interface SplitMe {
    'd': 'horizontal' | 'vertical';
    'fixed': boolean;
    'maxSizes': string;
    'minSizes': string;
    'n': number;
    'sizes': string;
    'throttle': number;
  }
  interface SplitMeAttributes extends StencilHTMLAttributes {
    'd'?: 'horizontal' | 'vertical';
    'fixed'?: boolean;
    'maxSizes'?: string;
    'minSizes'?: string;
    'n'?: number;
    'onSlotResized'?: (event: CustomEvent) => void;
    'sizes'?: string;
    'throttle'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'SplitMe': Components.SplitMe;
  }

  interface StencilIntrinsicElements {
    'split-me': Components.SplitMeAttributes;
  }


  interface HTMLSplitMeElement extends Components.SplitMe, HTMLStencilElement {}
  var HTMLSplitMeElement: {
    prototype: HTMLSplitMeElement;
    new (): HTMLSplitMeElement;
  };

  interface HTMLElementTagNameMap {
    'split-me': HTMLSplitMeElement
  }

  interface ElementTagNameMap {
    'split-me': HTMLSplitMeElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
